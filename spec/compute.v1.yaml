openapi: 3.0.3
servers:
- url: https://demo.secapi.cloud/providers/seca.compute
  description: Path Schema
- url: https://compute.seca.demo.secapi.cloud
  description: DNS Schema
info:
  title: Sovereign European Cloud API - Compute Foundation
  description: |
    The Compute Foundation API provides access to compute resources including virtual machines and instance management.
    This API is part of the Sovereign European Cloud API.
  version: v1
security:
- bearerAuth: []
tags:
- name: Catalogues
  description: Resource catalogues
- name: Quotas
  description: Quota management
- name: Compute
  description: Compute resources including virtual machines and instance management
paths:
  # Tenants Instance SKUs Resource
  /v1/tenants/{id}/skus:
    get:
      tags:
      - Catalogues
      summary: List available SKUs for compute instances
      description: |
        Retrieves a list of available SKU (Stock Keeping Unit) configurations for compute instances.

        ## Available SECA SKUs with their capabilities.
        Seca-Resources don't have mandatory parameters and extensions.
        (Provider may have more SKUs available.)

        | provider | tier | vCPU | ramGB | cpuType | benchmarkPoints |
        | ---------|------|-------|----------|-----------------|
        | SECA | seca.s | 2 | 4 | amd64 | min 3000 |
        | SECA | seca.m | 4 | 8 | amd64 | min 6000 |
        | SECA | seca.l | 8 | 16 | amd64 | min 12000 |
        | SECA | seca.xl | 16 | 32 | amd64 | min 24000 |
      operationId: listSkus
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
      - $ref: './schemas/parameters.yaml#/parameters/limitParam'
      - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
      - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response with list of SKUs
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: './schemas/instance-sku.yaml#/InstanceSku'
                    example:
                    - { spec: { provider: 'SECA', tier: 'seca.s', vCPU: 2, ramGB: 4, cpuType: 'amd64', benchmarkPoints: 3000 } }
                    - { spec: { provider: 'SECA', tier: 'seca.m', vCPU: 4, ramGB: 8, cpuType: 'amd64', benchmarkPoints: 6000 } }
                    - { spec: { provider: 'SECA', tier: 'seca.l', vCPU: 8, ramGB: 16, cpuType: 'amd64', benchmarkPoints: 12000 } }
                    - { spec: { provider: 'SECA', tier: 'seca.xl', vCPU: 16, ramGB: 32, cpuType: 'amd64', benchmarkPoints: 24000 } }
                  metadata:
                    $ref: './schemas/resource.yaml#/ResponseMetadata'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/skus/{name}:
    get:
      tags:
      - Catalogues
      summary: Get details of a specific SKU
      description: Retrieves details for a specific SKU by its name
      operationId: getSku
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response with SKU details
          content:
            application/json:
              schema:
                $ref: './schemas/instance-sku.yaml#/InstanceSku'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  # Compute Quotas Resource
  /v1/tenants/{id}/quotas:
    get:
      tags:
      - Quotas
      summary: List current Compute Provider Resource Quotas
      description: |
        Retrieves the resource quota for the Compute Resource Provider
      operationId: listComputeQuotas
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
      - $ref: './schemas/parameters.yaml#/parameters/limitParam'
      - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
      - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response with list of Compute Resource Quotas
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: './schemas/quotas.yaml#/ResourceQuota'
                  metadata:
                    $ref: './schemas/resource.yaml#/ResponseMetadata'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/quotas/{resourceType}:
    put:
      tags:
      - Quotas
      summary: Create or update the resource quota for the Compute Resource Provider
      operationId: createOrUpdateComputeQuota
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - name: resourceType
        in: path
        required: true
        schema:
          type: string
      - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/quotas.yaml#/ResourceQuota'
      responses:
        '202':
          description: Quota updated or created
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  # Workspace resources with provider namespace
  /v1/tenants/{id}/workspaces/{workspace}/instances:
    get:
      tags:
      - Compute
      summary: List all instances
      operationId: listInstances
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - name: workspace
        in: path
        required: true
        schema:
          type: string
      - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
      - $ref: './schemas/parameters.yaml#/parameters/limitParam'
      - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
      - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: './schemas/instance.yaml#/Instance'
                  metadata:
                    $ref: './schemas/resource.yaml#/ResponseMetadata'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/workspaces/{workspace}/instances/{name}:
    get:
      tags:
      - Compute
      summary: Get a specific instance
      operationId: getInstance
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/workspaceName'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/instance.yaml#/Instance'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    put:
      tags:
      - Compute
      summary: Create or update a specific instance
      operationId: createOrUpdateInstance
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/workspaceName'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/instance.yaml#/Instance'
      responses:
        '202':
          description: Instance updated or created
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    delete:
      tags:
      - Compute
      summary: Delete a specific instance
      operationId: deleteInstance
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/workspaceName'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '202':
          description: Instance deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/workspaces/{workspace}/instances/{name}/power-cycle:
    put:
      tags:
      - Compute
      summary: Power cycle a specific instance
      operationId: powerCycleInstance
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/workspaceName'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '202':
          description: Power cycle operation accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/workspaces/{workspace}/instances/{name}/power-off:
    put:
      tags:
      - Compute
      summary: Power off a specific instance
      operationId: powerOffInstance
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/workspaceName'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '202':
          description: Power off operation accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/workspaces/{workspace}/instances/{name}/power-on:
    put:
      tags:
      - Compute
      summary: Power on a specific instance
      operationId: powerOnInstance
      security:
      - bearerAuth: []
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenantID'
      - $ref: './schemas/parameters.yaml#/parameters/workspaceName'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '202':
          description: Power on operation accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

components:
  securitySchemes:
    $ref: './schemas/security.yaml#/securitySchemes'
