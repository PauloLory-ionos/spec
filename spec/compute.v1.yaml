# GENERATED - DO NOT EDIT THIS FILE DIRECTLY
openapi: 3.0.3

servers:
- url: https://demo.secapi.cloud/providers/seca.compute
  description: Path Schema
- url: https://compute.seca.demo.secapi.cloud
  description: DNS Schema

info:
  title: Compute
  version: v1
  description: |
    The Compute Foundation API provides access to compute resources 
    including virtual machines and instance management.
    This API is part of the Sovereign European Cloud API.

security:
- bearerAuth: []

tags:
- name: Sku
  description: Sku management
- name: Quota
  description: Quota management
- name: Instance
  description: Instance management

paths:
  /v1/tenants/{tenant}/skus:
    get:
      tags:
      - Sku
      security:
      - bearerAuth: []
      summary: List skus
      description: |
        Retrieves a list of available SKU (Stock Keeping Unit) configurations for compute instances.

        ## Available SECA SKUs with their capabilities.
        Seca-Resources don't have mandatory parameters and extensions.
        (Provider may have more SKUs available.)

        | provider | tier | vCPU | ramGB | cpuType | benchmarkPoints |
        |-|-|-|-|-|-|
        | SECA | seca.s | 2 | 4 | amd64 | min 3000 |
        | SECA | seca.m | 4 | 8 | amd64 | min 6000 |
        | SECA | seca.l | 8 | 16 | amd64 | min 12000 |
        | SECA | seca.xl | 16 | 32 | amd64 | min 24000 |
      operationId: listSkus
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
      - $ref: './schemas/parameters.yaml#/parameters/limitParam'
      - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
      - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuIterator"
              example:
                items:
                - spec:
                    benchmarkPoints: 3000
                    cpuType: amd64
                    provider: SECA
                    ramGB: 4
                    tier: seca.s
                    vCPU: 2
                - spec:
                    benchmarkPoints: 6000
                    cpuType: amd64
                    provider: SECA
                    ramGB: 8
                    tier: seca.m
                    vCPU: 4
                - spec:
                    benchmarkPoints: 12000
                    cpuType: amd64
                    provider: SECA
                    ramGB: 16
                    tier: seca.l
                    vCPU: 8
                - spec:
                    benchmarkPoints: 24000
                    cpuType: amd64
                    provider: SECA
                    ramGB: 32
                    tier: seca.xl
                    vCPU: 16

        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{tenant}/skus/{name}:
    get:
      tags:
      - Sku
      security:
      - bearerAuth: []
      summary: Get sku
      description: |
        Get a specific sku, useful for polling status updates of resources.
      operationId: getSku
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/instance-sku.yaml#/InstanceSku'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{tenant}/quotas:
    get:
      tags:
      - Quota
      security:
      - bearerAuth: []
      summary: List quotas
      description: |
        Lists quotas and provides paginated, filtered access.
      operationId: listQuotas
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
      - $ref: './schemas/parameters.yaml#/parameters/limitParam'
      - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
      - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuotaIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{tenant}/quotas/{name}:
    put:
      tags:
      - Quota
      security:
      - bearerAuth: []
      summary: Create or update quota
      description: |
        Creates or updates a quota. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateQuota
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the quota will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/quotas.yaml#/ResourceQuota'
      responses:
        '200':
          description: |
            Quota successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/quotas.yaml#/ResourceQuota'
        '201':
          description: |
            Quota successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/quotas.yaml#/ResourceQuota'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{tenant}/workspaces/{workspace}/instances:
    get:
      tags:
      - Instance
      security:
      - bearerAuth: []
      summary: List instances
      description: |
        Lists instances and provides paginated, filtered access.
      operationId: listInstances
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/workspace'
      - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
      - $ref: './schemas/parameters.yaml#/parameters/limitParam'
      - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
      - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{tenant}/workspaces/{workspace}/instances/{name}:
    get:
      tags:
      - Instance
      security:
      - bearerAuth: []
      summary: Get instance
      description: |
        Get a specific instance, useful for polling status updates of resources.
      operationId: getInstance
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/workspace'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/instance.yaml#/Instance'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

    put:
      tags:
      - Instance
      security:
      - bearerAuth: []
      summary: Create or update instance
      description: |
        Creates or updates a instance. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateInstance
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/workspace'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the instance will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/instance.yaml#/Instance'
      responses:
        '200':
          description: |
            Instance successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/instance.yaml#/Instance'
        '201':
          description: |
            Instance successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/instance.yaml#/Instance'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

    delete:
      tags:
      - Instance
      security:
      - bearerAuth: []
      summary: Delete instance
      description: |
        Deletes a instance using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      operationId: deleteInstance
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/workspace'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: Instance deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{tenant}/workspaces/{workspace}/instances/{name}/power-cycle:
    post:
      tags:
      - Instance
      security:
      - bearerAuth: []
      summary: power cycle instance
      description: |
        Power cycle (reboot) a specific instance
      operationId: PowerCycleInstance
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/workspace'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '202':
          description: action accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{tenant}/workspaces/{workspace}/instances/{name}/power-off:
    post:
      tags:
      - Instance
      security:
      - bearerAuth: []
      summary: power off instance
      description: |
        Power off (shutdown) a specific instance
      operationId: PowerOffInstance
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/workspace'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '202':
          description: action accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{tenant}/workspaces/{workspace}/instances/{name}/power-on:
    post:
      tags:
      - Instance
      security:
      - bearerAuth: []
      summary: power on instance
      description: |
        Power on (boot) a specific instance
      operationId: PowerOnInstance
      parameters:
      - $ref: './schemas/parameters.yaml#/parameters/tenant'
      - $ref: './schemas/parameters.yaml#/parameters/workspace'
      - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '202':
          description: action accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

components:
  securitySchemes:
    $ref: './schemas/security.yaml#/securitySchemes'

  schemas:
    SkuIterator:
      description: Iterator for skus
      type: object
      required:
      - items
      - metadata
      properties:
        items:
          description: List of skus
          type: array
          items:
            $ref: './schemas/instance-sku.yaml#/InstanceSku'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    QuotaIterator:
      description: Iterator for quotas
      type: object
      required:
      - items
      - metadata
      properties:
        items:
          description: List of quotas
          type: array
          items:
            $ref: './schemas/quotas.yaml#/ResourceQuota'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    InstanceIterator:
      description: Iterator for instances
      type: object
      required:
      - items
      - metadata
      properties:
        items:
          description: List of instances
          type: array
          items:
            $ref: './schemas/instance.yaml#/Instance'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'
