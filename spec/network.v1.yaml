# GENERATED - DO NOT EDIT THIS FILE DIRECTLY
openapi: 3.0.3

servers:
  - url: https://demo.secapi.cloud/providers/seca.network
    description: Path Schema
  - url: https://network.seca.demo.secapi.cloud
    description: DNS Schema

info:
  title: Network
  version: v1
  description: |
    The Network Foundation API provides access to network resources, including LANs, NICs, security groups, subnets, and routing tables.
    This API is part of the Sovereign European Cloud API.

security:
  - bearerAuth: []

tags:
  - name: Sku
    description: Sku management
  - name: Quota
    description: Quota management
  - name: Lan
    description: Lan management
  - name: Subnet
    description: Subnet management
  - name: Security Group
    description: Security Group management
  - name: Nic
    description: Nic management
  - name: Route-Table
    description: Route-Table management
  - name: Public Ip
    description: Public Ip management

paths:
  /v1/tenants/{tenant}/skus:
    get:
      tags:
        - Sku
      security:
        - bearerAuth: []
      summary: List skus
      description: |
        Retrieves a list of available SKU (Stock Keeping Unit) configurations for network resources.

        ## Available SECA Network SKUs with their capabilities
        Network SKUs represent guaranteed bandwidth performance for 95% of time within a 24h period.

        | provider | tier | bandwidth | description |
        |-|-|-|-|
        | SECA | seca.10 | 10 Mbps | Low-bandwidth network tier |
        | SECA | seca.100 | 100 Mbps | Medium-bandwidth network tier |
        | SECA | seca.1000 | 1000 Mbps | High-bandwidth network tier |
      operationId: listSkus
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/skus/{name}:
    get:
      tags:
        - Sku
      security:
        - bearerAuth: []
      summary: Get sku
      description: |
        Get a specific sku, useful for polling status updates of resources.
      operationId: getSku
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/network-sku.yaml#/NetworkSku'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
  /v1/tenants/{tenant}/quotas:
    get:
      tags:
        - Quota
      security:
        - bearerAuth: []
      summary: List quotas
      description: |
        Lists quotas and provides paginated, filtered access.
      operationId: listQuotas
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuotaIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/quotas/{name}:
    put:
      tags:
        - Quota
      security:
        - bearerAuth: []
      summary: Create or update quota
      description: |
        Creates or updates a quota. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateQuota
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the quota will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/quotas.yaml#/ResourceQuota'
      responses:
        '200':
          description: |
            Quota successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/quotas.yaml#/ResourceQuota'
        '201':
          description: |
            Quota successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/quotas.yaml#/ResourceQuota'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
  /v1/tenants/{tenant}/workspaces/{workspace}/lans:
    get:
      tags:
        - Lan
      security:
        - bearerAuth: []
      summary: List lans
      description: |
        Lists lans and provides paginated, filtered access.
      operationId: listLans
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LanIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{name}:
    get:
      tags:
        - Lan
      security:
        - bearerAuth: []
      summary: Get lan
      description: |
        Get a specific lan, useful for polling status updates of resources.
      operationId: getLan
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/lan.yaml#/Lan'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    put:
      tags:
        - Lan
      security:
        - bearerAuth: []
      summary: Create or update lan
      description: |
        Creates or updates a lan. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateLan
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the lan will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/lan.yaml#/Lan'
      responses:
        '200':
          description: |
            Lan successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/lan.yaml#/Lan'
        '201':
          description: |
            Lan successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/lan.yaml#/Lan'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    delete:
      tags:
        - Lan
      security:
        - bearerAuth: []
      summary: Delete lan
      description: |
        Deletes a lan using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      operationId: deleteLan
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: Lan deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/subnets:
    get:
      tags:
        - Subnet
      security:
        - bearerAuth: []
      summary: List subnets
      description: |
        Lists subnets and provides paginated, filtered access.
      operationId: listSubnets
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubnetIterator"
              example:
                items:
                  - metadata:
                      apiVersion: v1
                      description: Standard subnet with auto gateway
                      kind: subnet
                      name: standard-subnet
                    spec:
                      dhcpEnabled: true
                      ipv4Range: 192.168.1.0/24
                      networkSkuRef: seca.100
                  - metadata:
                      apiVersion: v1
                      description: Custom gateway through network appliance
                      kind: subnet
                      name: firewall-subnet
                    spec:
                      defaultGateway:
                        type: instanceRef
                        value: network-firewall-01
                      dhcpEnabled: true
                      ipv4Range: 10.0.0.0/24

        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/subnets/{name}:
    get:
      tags:
        - Subnet
      security:
        - bearerAuth: []
      summary: Get subnet
      description: |
        Get a specific subnet, useful for polling status updates of resources.
      operationId: getSubnet
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/subnet.yaml#/Subnet'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    put:
      tags:
        - Subnet
      security:
        - bearerAuth: []
      summary: Create or update subnet
      description: |
        Creates or updates a subnet. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateSubnet
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the subnet will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/subnet.yaml#/Subnet'
      responses:
        '200':
          description: |
            Subnet successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/subnet.yaml#/Subnet'
        '201':
          description: |
            Subnet successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/subnet.yaml#/Subnet'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    delete:
      tags:
        - Subnet
      security:
        - bearerAuth: []
      summary: Delete subnet
      description: |
        Deletes a subnet using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      operationId: deleteSubnet
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: Subnet deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/security-groups:
    get:
      tags:
        - Security Group
      security:
        - bearerAuth: []
      summary: List security-groups
      description: |
        Lists security-groups and provides paginated, filtered access.
      operationId: listSecurity-Groups
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityGroupIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/security-groups/{name}:
    get:
      tags:
        - Security Group
      security:
        - bearerAuth: []
      summary: Get security group
      description: |
        Get a specific security group, useful for polling status updates of resources.
      operationId: getSecurityGroup
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/security-group.yaml#/SecurityGroup'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    put:
      tags:
        - Security Group
      security:
        - bearerAuth: []
      summary: Create or update security group
      description: |
        Creates or updates a security group. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateSecurityGroup
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the security group will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/security-group.yaml#/SecurityGroup'
      responses:
        '200':
          description: |
            Security Group successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/security-group.yaml#/SecurityGroup'
        '201':
          description: |
            Security Group successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/security-group.yaml#/SecurityGroup'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    delete:
      tags:
        - Security Group
      security:
        - bearerAuth: []
      summary: Delete security group
      description: |
        Deletes a security group using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      operationId: deleteSecurityGroup
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: Security Group deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/nics:
    get:
      tags:
        - Nic
      security:
        - bearerAuth: []
      summary: List nics
      description: |
        Lists nics and provides paginated, filtered access.
      operationId: listNics
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NicIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/nics/{name}:
    get:
      tags:
        - Nic
      security:
        - bearerAuth: []
      summary: Get nic
      description: |
        Get a specific nic, useful for polling status updates of resources.
      operationId: getNic
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/nic.yaml#/Nic'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    put:
      tags:
        - Nic
      security:
        - bearerAuth: []
      summary: Create or update nic
      description: |
        Creates or updates a nic. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateNic
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the nic will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/nic.yaml#/Nic'
      responses:
        '200':
          description: |
            Nic successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/nic.yaml#/Nic'
        '201':
          description: |
            Nic successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/nic.yaml#/Nic'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    delete:
      tags:
        - Nic
      security:
        - bearerAuth: []
      summary: Delete nic
      description: |
        Deletes a nic using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      operationId: deleteNic
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: Nic deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/route-tables:
    get:
      tags:
        - Route-Table
      security:
        - bearerAuth: []
      summary: List route-tables
      description: |
        Lists route-tables and provides paginated, filtered access.
      operationId: listRoute-Tables
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Route-TableIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/route-tables/{name}:
    get:
      tags:
        - Route-Table
      security:
        - bearerAuth: []
      summary: Get route-table
      description: |
        Get a specific route-table, useful for polling status updates of resources.
      operationId: getRoute-Table
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/route-table.yaml#/RouteTable'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    put:
      tags:
        - Route-Table
      security:
        - bearerAuth: []
      summary: Create or update route-table
      description: |
        Creates or updates a route-table. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateRoute-Table
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the route-table will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/route-table.yaml#/RouteTable'
      responses:
        '200':
          description: |
            Route-Table successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/route-table.yaml#/RouteTable'
        '201':
          description: |
            Route-Table successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/route-table.yaml#/RouteTable'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    delete:
      tags:
        - Route-Table
      security:
        - bearerAuth: []
      summary: Delete route-table
      description: |
        Deletes a route-table using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      operationId: deleteRoute-Table
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: Route-Table deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/public-ips:
    get:
      tags:
        - Public Ip
      security:
        - bearerAuth: []
      summary: List public ips
      description: |
        Lists public ips and provides paginated, filtered access.
      operationId: listPublicIps
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicIpIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/workspaces/{workspace}/lans/{lan}/public-ips/{name}:
    get:
      tags:
        - Public Ip
      security:
        - bearerAuth: []
      summary: Get public ip
      description: |
        Get a specific public ip, useful for polling status updates of resources.
      operationId: getPublicIp
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/public-ip.yaml#/PublicIp'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    put:
      tags:
        - Public Ip
      security:
        - bearerAuth: []
      summary: Create or update public ip
      description: |
        Creates or updates a public ip. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdatePublicIp
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the public ip will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/public-ip.yaml#/PublicIp'
      responses:
        '200':
          description: |
            Public Ip successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/public-ip.yaml#/PublicIp'
        '201':
          description: |
            Public Ip successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/public-ip.yaml#/PublicIp'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    delete:
      tags:
        - Public Ip
      security:
        - bearerAuth: []
      summary: Delete public ip
      description: |
        Deletes a public ip using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      operationId: deletePublicIp
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/lan'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: Public Ip deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
components:
  securitySchemes:
    $ref: './schemas/security.yaml#/securitySchemes'

  schemas:
    SkuIterator:
      description: Iterator for skus
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of skus
          type: array
          items:
            $ref: './schemas/network-sku.yaml#/NetworkSku'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    QuotaIterator:
      description: Iterator for quotas
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of quotas
          type: array
          items:
            $ref: './schemas/quotas.yaml#/ResourceQuota'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    LanIterator:
      description: Iterator for lans
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of lans
          type: array
          items:
            $ref: './schemas/lan.yaml#/Lan'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    SubnetIterator:
      description: Iterator for subnets
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of subnets
          type: array
          items:
            $ref: './schemas/subnet.yaml#/Subnet'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    SecurityGroupIterator:
      description: Iterator for security-groups
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of security-groups
          type: array
          items:
            $ref: './schemas/security-group.yaml#/SecurityGroup'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    NicIterator:
      description: Iterator for nics
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of nics
          type: array
          items:
            $ref: './schemas/nic.yaml#/Nic'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    Route-TableIterator:
      description: Iterator for route-tables
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of route-tables
          type: array
          items:
            $ref: './schemas/route-table.yaml#/RouteTable'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'

    PublicIpIterator:
      description: Iterator for public ips
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of public ips
          type: array
          items:
            $ref: './schemas/public-ip.yaml#/PublicIp'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'
