Route:
  type: object
  properties:
    spec:
      $ref: '#/RouteSpec'
    status:
      $ref: '#/RouteStatus'

RouteSpec:
  type: object
  properties:
    destinationCidrBlock:
      type: string
      description: The CIDR block for the destination
    target:
      type: string
      description: The target for the route (e.g., igw-id, nat-gateway-id)

RouteStatus:
  type: object
  properties:
    state:
      type: string
      enum: [active, blackhole]
      description: The state of the route
    managedBy:
      type: string
      enum: [user, service]
      description: Whether the route is managed by the user or a service
    conditions:
      type: array
      items:
        $ref: "./resource.yaml#/StatusCondition"

# If a network is created a RouteTable is created by default,
# some providers permit the creation and usage of additional
# RouteTables. Supporting multiple RouteTables is not a requirement
# for the CSP.
# By default the RouteTable has a default route to the internet gateway
# this requires the 
RouteTable:
  allOf:
  - $ref: './resource.yaml#/UserResourceMetadata'
  - type: object
    required:
    - spec
    properties:
      metadata:
        $ref: './resource.yaml#/RegionalResourceMetadata'
      spec:
        $ref: '#/RouteTableSpec'
      status:
        $ref: '#/RouteTableStatus'

RouteTableSpec:
  type: object
  properties:
    routes:
      type: array
      items:
        $ref: '#/Route'

RouteTableStatus:
  allOf:
    - $ref: "./resource.yaml#/Status"
    - type: object
      readOnly: true
      properties:
        routes:
          type: array
          items:
            $ref: '#/Route'
