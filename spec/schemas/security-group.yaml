SecurityGroup:
  type: object
  description: |
    A Security Group defines network access rules for a group of compute instances.

    Key Concepts:
    - Rules define bi-directional or uni-directional network communication
    - Supports routing between security groups
    - Enables granular control over public internet access
    - Implements stateful connection tracking

    Connection Tracking:
    When a connection is initiated from an allowed source, return traffic is automatically permitted,
    even if not explicitly defined in the rules. This ensures seamless, bi-directional communication
    for established connections.

    Routing and Communication Patterns:
    - Group-to-Group Rules: Define explicit communication paths between security groups
    - PublicInternet Target: Allows precise control over internet-facing traffic
    - Ingress/Egress Control: Fine-grained rules for incoming and outgoing traffic

  properties:
    apiVersion:
      type: string
      description: API version of the resource
      default: v1
      readOnly: true
    kind:
      type: string
      description: Type of the resource
      enum: [ security-group ]
      readOnly: true
    metadata:
      $ref: './resource.yaml#/RegionalResourceMetadata'
    spec:
      type: object
      description: Specification of the security group
      properties:
        rules:
          type: array
          description: |
            Network access rules defining communication between security groups and external networks.

            Rule Evaluation:
            - Rules are processed in order of priority (lower number = higher priority)
            - First matching rule determines the action (allow/deny)
            - Default behavior is to deny all traffic not explicitly allowed

          items:
            $ref: '#/SecurityGroupRule'
    status:
      type: object
      readOnly: true
      description: |
        Current status of the security group
        Condition type `rules` indicates the status of the security group rules.
        The status can be `applied` or `pending`.
      properties:
        state:
          $ref: './resource.yaml#/ResourceState'
        conditions:
          type: array
          items:
            $ref: "./resource.yaml#/StatusCondition"
      example:
        conditions:
        - type: "rules"
          status: "applied"
          lastTransitionTime: "2024-11-21T14:39:22Z"
          reason: "RulesApplied"
          message: "All security rules have been applied"

SecurityGroupRule:
  type: object
  description: Represents a security group rule
  properties:
    apiVersion:
      type: string
      description: API version of the resource
      default: v1
      readOnly: true
    kind:
      type: string
      description: Type of the resource
      enum: [ security-group-rule ]
      readOnly: true
    metadata:
      $ref: './resource.yaml#/RegionalResourceMetadata'
    spec:
      type: object
      properties:
        description:
          type: string
          description: Human-readable description of the rule's purpose
        direction:
          type: string
          enum: ['ingress', 'egress']
          description: |
            - ingress: Only incoming traffic is allowed
            - egress: Only outgoing traffic is allowed
            - bidirectional: Traffic can flow both ways
        protocol:
          type: string
          enum: ['tcp', 'udp', 'icmp', 'all']
          description: Network protocol for the rule
        portRange:
          type: object
          description: Specific port or port range for the rule
          properties:
            from:
              type: integer
              minimum: 1
              maximum: 65535
            to:
              type: integer
              minimum: 1
              maximum: 65535
        source:
          type: object
          description: |
            Source of the traffic. Can be a security group, CIDR range, or 'publicInternet'.
            'publicInternet' allows explicit control over internet-facing traffic.
          properties:
            type:
              type: string
              enum: ['securityGroup', 'cidr', 'publicInternet']
            value:
              type: string
              description: |
                - For securityGroup: name of the source security group
                - For cidr: IPv4 CIDR range
                - For publicInternet: 'any' or a IPv4 CIDR Range
        priority:
          type: integer
          description: Rule priority (lower number = higher priority)
          minimum: 1
          maximum: 10000
    status:
      $ref: "./resource.yaml#/Status"
