schemas:
  Error:
    type: object
    description: |
      A detailed error response see https://datatracker.ietf.org/doc/html/rfc7807.
    required:
      - type
      - title
      - status
      - instance
    properties:
      type:
        type: string
        description: The type of error, expressed as a URI. 
        example: "https://httpstatuses.io/400"
      title:
        type: string
        description: |
          A short, human-readable summary of the problem
          type.  It SHOULD NOT change from occurrence to occurrence of the
          problem, except for purposes of localization (e.g., using
          proactive content negotiation; see [RFC7231], Section 3.4).
      status:
        type: number
        description: |
          The HTTP status type ([http://secapi.eu/errors/-rfc7231], Section 6)
          generated by the origin server for this occurrence of the problem.
        example: 400
      detail:
        type: string
        description: A human-readable explanation specific to this occurrence of the problem.
      instance:
        type: string
        description: |
          A URI reference that identifies the specific occurrence of the problem.
          It may or may not yield further information if dereferenced.
      sources:
        type: array
        items:
          $ref: '#/schemas/ErrorSource'
      meta:
        type: object
        description: A meta object containing non-standard meta-information about the error.

  ErrorSource:
    type: object
    description: An object containing references to the source of the error.
    required:
      - pointer
      - parameter
    properties:
      pointer:
        type: string
        description: A JSON Pointer [RFC6901] to the associated entity in the request document.
      parameter:
        type: string
        description: A string indicating which URI query parameter caused the error.

  Error400:
    allOf:
    - $ref: '#/schemas/Error'
    - description: A 400 Bad Request error response
      example:
        status: 400
        type: "http://secapi.eu/errors/invalid-request"
        title: "Bad Request"
        detail: "The request was invalid or cannot be served."

  Error401:
    allOf:
    - $ref: '#/schemas/Error'
    - description: A 401 Unauthorized error response
      example:
        status: 401
        type: "http://secapi.eu/errors/unauthorized"
        title: "Unauthorized"
        detail: "Authentication is required and has failed or has not been provided."

  Error403:
    allOf:
    - $ref: '#/schemas/Error'
    - description: A 403 Forbidden error response
      example:
        status: 403
        type: "http://secapi.eu/errors/forbidden"
        title: "Forbidden"
        detail: "The request was valid, but the server is refusing action."

  Error404:
    allOf:
    - $ref: '#/schemas/Error'
    - description: A 404 Not Found error response
      example:
        status: 404
        type: "http://secapi.eu/errors/resource-not-found"
        title: "Not Found"
        detail: "The requested resource could not be found."

  Error412:
    allOf:
    - $ref: '#/schemas/Error'
    - description: A 412 Precondition Failed error response
      example:
        status: 412
        type: "http://secapi.eu/errors/precondition-failed"
        title: "Precondition Failed"
        detail: "The precondition given in the If-Match header failed."

  Error422:
    allOf:
    - $ref: '#/schemas/Error'
    - description: A 422 Unprocessable Entity error response
      example:
        status: 422
        type: "http://secapi.eu/errors/validation-error"
        title: "Unprocessable Entity"
        detail: "The request was well-formed but was unable to be followed due to semantic errors."
        source:
          pointer: "/data/attributes/username"

  Error500:
    allOf:
    - $ref: '#/schemas/Error'
    - description: A 500 Internal Server Error error response
      example:
        status: 500
        type: "http://secapi.eu/errors/internal-server-error"
        title: "Internal Server Error"
        detail: "The server encountered an unexpected condition that prevented it from fulfilling the request."

responses:
  Error400:
    description: Bad Request
    content:
      application/json:
        schema:
          $ref: '#/schemas/Error400'
        example:
          status: 400
          type: "http://secapi.eu/errors/invalid-request"
          title: "Bad Request"
          detail: "The request was invalid or cannot be served."

  Error401:
    description: Unauthorized
    content:
      application/json:
        schema:
          $ref: '#/schemas/Error401'
        example:
          status: 401
          type: "http://secapi.eu/errors/unauthorized"
          title: "Unauthorized"
          detail: "Authentication is required and has failed or has not been provided."

  Error403:
    description: Forbidden
    content:
      application/json:
        schema:
          $ref: '#/schemas/Error403'
        example:
          status: 403
          type: "http://secapi.eu/errors/forbidden"
          title: "Forbidden"
          detail: "The request was valid, but the server is refusing action."

  Error404:
    description: Not Found
    content:
      application/json:
        schema:
          $ref: '#/schemas/Error404'
        example:
          status: 404
          type: "http://secapi.eu/errors/resource-not-found"
          title: "Not Found"
          detail: "The requested resource could not be found."

  Error412:
    description: Precondition Failed
    content:
      application/json:
        schema:
          $ref: '#/schemas/Error412'
        example:
          status: 412
          type: "http://secapi.eu/errors/precondition-failed"
          title: "Precondition Failed"
          detail: "The precondition given in the If-Match header failed."

  Error422:
    description: Unprocessable Entity
    content:
      application/json:
        schema:
          $ref: '#/schemas/Error422'
        example:
          status: 422
          type: "http://secapi.eu/errors/validation-error"
          title: "Unprocessable Entity"
          detail: "The subnetRef is not correctly formatted."
          sources:
          - pointer: "/spec/subnetRef"

  Error500:
    description: Internal Server Error
    content:
      application/json:
        schema:
          $ref: '#/schemas/Error500'
        example:
          status: 500
          type: "http://secapi.eu/errors/internal-server-error"
          title: "Internal Server Error"
          detail: "The server encountered an unexpected condition that prevented it from fulfilling the request."
