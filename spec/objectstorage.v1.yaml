# GENERATED - DO NOT EDIT THIS FILE DIRECTLY
openapi: 3.0.3

servers:
  - url: https://demo.secapi.cloud/providers/seca.object-storage
    description: Path Schema
  - url: https://object-storage.seca.demo.secapi.cloud
    description: DNS Schema

info:
  title: Object Storage
  version: v1
  description: |
    The Object Storage API provides access to Object Storage resources.
    This API is part of the Sovereign European Cloud API.

security:
  - bearerAuth: []

tags:
  - name: Account
    description: Account management

paths:
  /v1/tenants/{tenant}/workspaces/{workspace}/accounts:
    get:
      tags:
        - Account
      security:
        - bearerAuth: []
      summary: List accounts
      description: |
        Lists accounts and provides paginated, filtered access.
      operationId: listAccounts
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountIterator"
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  /v1/tenants/{tenant}/workspaces/{workspace}/accounts/{name}:
    get:
      tags:
        - Account
      security:
        - bearerAuth: []
      summary: Get account
      description: |
        Get a specific account, useful for polling status updates of resources.
      operationId: getAccount
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/object-storage.yaml#/ObjectStorageAccount'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    put:
      tags:
        - Account
      security:
        - bearerAuth: []
      summary: Create or update account
      description: |
        Creates or updates a account. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.
      operationId: createOrUpdateAccount
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the account will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/object-storage.yaml#/ObjectStorageAccount'
      responses:
        '200':
          description: |
            Account successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/object-storage.yaml#/ObjectStorageAccount'
        '201':
          description: |
            Account successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: './schemas/object-storage.yaml#/ObjectStorageAccount'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
    delete:
      tags:
        - Account
      security:
        - bearerAuth: []
      summary: Delete account
      description: |
        Deletes a account using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      operationId: deleteAccount
      parameters:
        - $ref: './schemas/parameters.yaml#/parameters/tenant'
        - $ref: './schemas/parameters.yaml#/parameters/workspace'
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: Account deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    
components:
  securitySchemes:
    $ref: './schemas/security.yaml#/securitySchemes'

  schemas:
    AccountIterator:
      description: Iterator for accounts
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of accounts
          type: array
          items:
            $ref: './schemas/object-storage.yaml#/ObjectStorageAccount'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'
