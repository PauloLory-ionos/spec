# GENERATED - DO NOT EDIT THIS FILE DIRECTLY
openapi: 3.0.3
{{- $spec := (ds "spec") }}

servers:
  - url: https://demo.secapi.cloud/providers/seca.{{ $spec.name | strings.Slug }}
    description: Path Schema
  - url: https://{{ $spec.name | strings.Slug }}.seca.demo.secapi.cloud
    description: DNS Schema

info:
  title: {{ $spec.title }}
  version: {{ $spec.version }}
  description: |
{{ $spec.description | strings.TrimSpace | indent 4 }}

security:
  - bearerAuth: []

tags:
{{- range $spec.resources }}
  - name: {{ .name | strings.Title }}
    description: {{ .name | strings.Title }} management
{{- end }}

paths:
{{- range $spec.resources }}
  {{- if coll.Has .operations "list" }}
  /{{ $spec.version }}{{ range .hierarchy }}/{{ . }}s/{{ printf "{%s}" . }}{{ end }}/{{ .plural | strings.Slug }}:
    get:
      tags:
        - {{ .name | strings.Title }}
      security:
        - bearerAuth: []
      summary: List {{ .plural }}
      {{- if and (coll.Has . "description") (coll.Has .description "list") }}
      description: |
{{ .description.list | strings.TrimSpace | indent 8 }}
      {{- else }}
      description: |
        Lists {{ .plural }} and provides paginated, filtered access.
      {{- end }}
      operationId: list{{ .plural | strings.Title | strings.ReplaceAll " " "" }}
      parameters:
      {{- range .hierarchy }}
        - $ref: './schemas/parameters.yaml#/parameters/{{ . }}'
      {{- end}}
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/{{ .name | strings.Title | strings.ReplaceAll " " "" }}Iterator"
              {{- if and (coll.Has . "example") (coll.Has .example "list") }}
              example:
{{ .example.list | data.ToYAML | indent 16 }}
              {{- end }}
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  {{ end }}
  {{- if or (coll.Has .operations "get") (coll.Has .operations "put") (coll.Has .operations "delete") }}
  /{{ $spec.version }}{{ range .hierarchy }}/{{ . }}s/{{ printf "{%s}" . }}{{ end }}/{{ .plural | strings.Slug }}/{name}:
  {{- if coll.Has .operations "get" }}
    get:
      tags:
        - {{ .name | strings.Title }}
      security:
        - bearerAuth: []
      summary: Get {{ .name }}
      {{- if and (coll.Has . "description") (coll.Has .description "get") }}
      description: |
{{ .description.get | strings.TrimSpace | indent 8 }}
      {{- else }}
      description: |
        Get a specific {{ .name }}, useful for polling status updates of resources.
      {{- end }}
      operationId: get{{ .name | strings.Title | strings.ReplaceAll " " "" }}
      parameters:
      {{- range .hierarchy }}
        - $ref: './schemas/parameters.yaml#/parameters/{{ . }}'
      {{- end}}
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '{{ .schema }}'
              {{- if and (coll.Has . "example") (coll.Has .example "get") }}
              example:
{{ .example.get | data.ToYAML | indent 16 }}
              {{- end }}
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    {{ end }}
    {{- if coll.Has .operations "put" }}
    put:
      tags:
        - {{ .name | strings.Title }}
      security:
        - bearerAuth: []
      summary: Create or update {{ .name }}
      {{- if and (coll.Has . "description") (coll.Has .description "put") }}
      description: |
{{ .description.put | strings.TrimSpace | indent 8 }}
      {{- else}}
      description: |
        Creates or updates a {{ .name }}. The return code of the endpoint
        provides indicates if the resource was created or updated. A client
        must accept both as successful response to the request.  
      {{- end }}
      operationId: createOrUpdate{{ .name | strings.Title | strings.ReplaceAll " " "" }}
      parameters:
      {{- range .hierarchy }}
        - $ref: './schemas/parameters.yaml#/parameters/{{ . }}'
      {{- end}}
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        description: |
          Any provided `metadata` on the {{ .name }} will be ignored by the resource server.
        required: true
        content:
          application/json:
            schema:
              $ref: '{{ .schema }}'
              {{- if and (coll.Has . "example") (coll.Has .example "putRequest") }}
              example:
{{ .example.putRequest | data.ToYAML | indent 16 }}
              {{- end }}
      responses:
        '200':
          description: |
            {{ .name | strings.Title }} successfully updated, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: '{{ .schema }}'
              {{- if and (coll.Has . "example") (coll.Has .example "putResponse") }}
              example:
{{ .example.putResponse | data.ToYAML | indent 16 }}
              {{- end }}
        '201':
          description: |
            {{ .name | strings.Title }} successfully created, doesn't indicate successful
            resource provisioning.
          content:
            application/json:
              schema:
                $ref: '{{ .schema }}'
              {{- if and (coll.Has . "example") (coll.Has .example "putResponse") }}
              example:
{{ .example.putResponse | data.ToYAML | indent 16 }}
              {{- end }}
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '409':
          $ref: './schemas/errors.yaml#/responses/Error409'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    {{ end }}
    {{- if coll.Has .operations "delete" }}
    delete:
      tags:
        - {{ .name | strings.Title }}
      security:
        - bearerAuth: []
      summary: Delete {{ .name }}
      {{- if and (coll.Has . "description") (coll.Has .description "delete") }}
      description: |
{{ .description.delete | strings.TrimSpace | indent 8 }}
      {{- else }}
      description: |
        Deletes a {{ .name }} using the given name. In case the resource workspace
        already deleted `404` is returned. For failure tolerance in case of retry the
        client needs to accept `404` and `202` as a successful deletion. If deletion
        of the resource takes longer deletion can be issued multiple times with the
        same result `202`, in all cased the resource will be only deleted once.
      {{- end }}
      operationId: delete{{ .name | strings.Title | strings.ReplaceAll " " "" }}
      parameters:
      {{- range .hierarchy }}
        - $ref: './schemas/parameters.yaml#/parameters/{{ . }}'
      {{- end}}
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      responses:
        '202':
          description: {{ .name | strings.Title }} deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    {{ end }}
    {{- $resource := . }}
    {{- if coll.Has . "actions" }}
    {{- range .actions }}
  /{{ $spec.version }}{{ range $resource.hierarchy }}/{{ . }}s/{{ printf "{%s}" . }}{{ end }}/{{ $resource.plural | strings.Slug  }}/{name}/{{ .name | strings.Slug }}:
    post:
      tags:
        - {{ $resource.name | strings.Title }}
      security:
        - bearerAuth: []
      summary: {{ .name }} {{ $resource.name }}
      {{- if coll.Has . "description" }}
      description: |
{{ .description | strings.TrimSpace | indent 8 }}
      {{- end }}
      operationId: {{ .name | strings.Title | strings.ReplaceAll " " "" }}{{ $resource.name | strings.Title }}
      parameters:
      {{- range $resource.hierarchy }}
        - $ref: './schemas/parameters.yaml#/parameters/{{ . }}'
      {{- end}}
        - $ref: './schemas/parameters.yaml#/parameters/resourceName'
      responses:
        '202':
          description: action accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    {{ end }}
    {{- end }}
  {{- end }}
{{- end }}
components:
  securitySchemes:
    $ref: './schemas/security.yaml#/securitySchemes'

  schemas:
{{- range $spec.resources }}
    {{ .name | strings.Title | strings.ReplaceAll " " "" }}Iterator:
      description: Iterator for {{ .plural }}
      type: object
      required:
        - items
        - metadata
      properties:
        items:
          description: List of {{ .plural }}
          type: array
          items:
            $ref: '{{ .schema }}'
        metadata:
          $ref: './schemas/resource.yaml#/ResponseMetadata'
{{ end }}