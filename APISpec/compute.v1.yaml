openapi: 3.0.3
servers:
  - url: https://demo.secapi.cloud/providers/seca.compute
    description: Path Schema
  - url: https://compute.seca.demo.secapi.cloud
    description: DNS Schema
info:
  title: Sovereign European Cloud API - Compute Foundation
  description: |
    The Compute Foundation API provides access to compute resources including virtual machines and instance management.
    This API is part of the Sovereign European Cloud API.
  version: v1
security:
  - bearerAuth: []
tags:
  - name: Catalogues
    description: Resource catalogues
  - name: Quotas
    description: Quota management
  - name: Compute
    description: Compute resources including virtual machines and instance management
paths:
  # Tenants Instance SKUs Resource
  /v1/tenants/{id}/skus:
    get:
      tags:
        - Catalogues
      summary: List available SKUs for compute instances
      description: |
        Retrieves a list of available SKU (Stock Keeping Unit) configurations for compute instances.

        ## Available SECA SKUs with their capabilities.
        Seca-Resources don't have mandatory parameters and extensions.
        (Provider may have more SKUs available.)

        | provider | tier | vCPU | ramGB | cpuType | benchmarkPoints |
        | ---------|------|-------|----------|-----------------|
        | SECA | seca.s | 2 | 4 | amd64 | min 3000 |
        | SECA | seca.m | 4 | 8 | amd64 | min 6000 |
        | SECA | seca.l | 8 | 16 | amd64 | min 12000 |
        | SECA | seca.xl | 16 | 32 | amd64 | min 24000 |
      operationId: listSkus
      x-authorization:
        type: hybrid  # Supports both RBAC and ABAC
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/skus"]
            verbs: ["list"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response with list of SKUs
          content:
            application/json:
              schema:
                type: object
                example:
                - { provider: 'SECA', tier: 'seca.s',  vCPU:  2, ramGB:  4, cpuType: 'amd64', benchmarkPoints:  3000 }
                - { provider: 'SECA', tier: 'seca.m',  vCPU:  4, ramGB:  8, cpuType: 'amd64', benchmarkPoints:  6000 }
                - { provider: 'SECA', tier: 'seca.l',  vCPU:  8, ramGB: 16, cpuType: 'amd64', benchmarkPoints: 12000 }
                - { provider: 'SECA', tier: 'seca.xl', vCPU: 16, ramGB: 32, cpuType: 'amd64', benchmarkPoints: 24000 }
                properties:
                  items:
                    type: array
                    items:
                      $ref: './schemas/instance-sku.yaml#/InstanceSku'
                  metadata:
                    type: object
                    properties:
                      skipToken:
                        type: string
                        description: Opaque cursor to get the next page. Field is omitted when there are no more pages available.
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/skus/{name}:
    get:
      tags:
        - Catalogues
      summary: Get details of a specific SKU
      description: Retrieves details for a specific SKU by its name
      operationId: getSku
      x-authorization:
        type: hybrid  # Supports both RBAC and ABAC
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/skus/{skuName}"]
            verbs: ["get"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with SKU details
          content:
            application/json:
              schema:
                $ref: './schemas/instance-sku.yaml#/InstanceSku'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  # Compute Quotas Resource
  /v1/tenants/{id}/quotas:
    get:
      tags:
        - Quotas
      summary: List current Compute Provider Resource Quotas
      description: |
        Retrieves the resource quota for the Compute Resource Provider
      operationId: listComputeQuotas
      security:
        - bearerAuth: []  # JWT required for authentication
      x-authorization:
        type: hybrid  # Supports both RBAC and ABAC
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}"]
            resources: ["seca.compute/quotas"]
            verbs: ["list"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response with list of Compute Resource Quotas
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: './schemas/quotas.yaml#/ResourceQuota'
                  metadata:
                    type: object
                    properties:
                      skipToken:
                        type: string
                        description: Opaque cursor to get the next page. Field is omitted when there are no more pages available.
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/quotas/{resourceType}:
    put:
      tags:
        - Quotas
      summary: Create or update the resource quota for the Compute Resource Provider
      operationId: createOrUpdateComputeQuota
      x-authorization:
        type: hybrid  # Supports both RBAC and ABAC
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/"]
            resources: ["seca.compute/quotas/{resourceType}"]
            verbs: ["create","update"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: resourceType
          in: path
          required: true
          schema:
            type: string
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/quotas.yaml#/ResourceQuota'
      responses:
        '202':
          description: Quota updated or created
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
  
  # Workspace resources with provider namespace
  /v1/tenants/{id}/workspaces/{workspace}/instances:
    get:
      tags:
        - Compute
      summary: List all instances
      operationId: listInstances
      x-authorization:
        type: hybrid  # Supports both RBAC and ABAC
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/instances"]
            verbs: ["list"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: workspace
          in: path
          required: true
          schema:
            type: string
        - $ref: './schemas/parameters.yaml#/parameters/labelSelector'
        - $ref: './schemas/parameters.yaml#/parameters/limitParam'
        - $ref: './schemas/parameters.yaml#/parameters/skipTokenParam'
        - $ref: './schemas/parameters.yaml#/parameters/acceptHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: './schemas/instance.yaml#/Instance'
                  metadata:
                    type: object
                    properties:
                      skipToken:
                        type: string
                        description: Opaque cursor to get the next page. Field is omitted when there are no more pages available.
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
          
  /v1/tenants/{id}/workspaces/{workspace}/instances/{name}:
    get:
      tags:
        - Compute
      summary: Get a specific instance
      operationId: getInstance
      x-authorization:
        type: hybrid  # Supports both RBAC and ABAC
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/instances/{instanceName}"]
            verbs: ["get"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: workspace
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: './schemas/instance.yaml#/Instance'
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    put:
      tags:
        - Compute
      summary: Create or update a specific instance
      operationId: createOrUpdateInstance
      x-authorization:
        type: hybrid  # Supports both RBAC and ABAC
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/instances/{instanceName}"]
            verbs: ["create","update"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: workspace
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
        - $ref: './schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/instance.yaml#/Instance'
      responses:
        '202':
          description: Instance updated or created
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '412':
          $ref: './schemas/errors.yaml#/responses/Error412'
        '422':
          $ref: './schemas/errors.yaml#/responses/Error422'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
    delete:
      tags:
        - Compute
      summary: Delete a specific instance
      operationId: deleteInstance
      x-authorization:
        type: hybrid  # Supports both RBAC and ABAC
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/instances/{instanceName}"]
            verbs: ["delete"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: workspace
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Instance deletion accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/workspaces/{workspace}/instances/{name}/power-cycle:
    post:
      tags:
        - Compute
      summary: Power cycle a specific instance
      operationId: powerCycleInstance
      x-authorization:
        type: hybrid
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/instances/{instanceName}"]
            verbs: ["power"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: workspace
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Power cycle operation accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'
          
  /v1/tenants/{id}/workspaces/{workspace}/instances/{name}/power-off:
    post:
      tags:
        - Compute
      summary: Power off a specific instance
      operationId: powerOffInstance
      x-authorization:
        type: hybrid
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/instances/{instanceName}"]
            verbs: ["power"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: workspace
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Power off operation accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

  /v1/tenants/{id}/workspaces/{workspace}/instances/{name}/power-on:
    post:
      tags:
        - Compute
      summary: Power on a specific instance
      operationId: powerOnInstance
      x-authorization:
        type: hybrid
        policies:
          - type: RBAC
            scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
            resources: ["seca.compute/instances/{instanceName}"]
            verbs: ["power"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant ID
        - name: workspace
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Power on operation accepted
        '400':
          $ref: './schemas/errors.yaml#/responses/Error400'
        '401':
          $ref: './schemas/errors.yaml#/responses/Error401'
        '403':
          $ref: './schemas/errors.yaml#/responses/Error403'
        '404':
          $ref: './schemas/errors.yaml#/responses/Error404'
        '500':
          $ref: './schemas/errors.yaml#/responses/Error500'

components:
  securitySchemes:
    $ref: './schemas/security.yaml#/securitySchemes'
