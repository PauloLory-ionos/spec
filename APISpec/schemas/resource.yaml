ResourceMetadata:
  type: object
  description: Base metadata for all resources, with optional location references
  properties:
    name:
      type: string
      description: Resource identifier in dash-case (kebab-case) format. Must start and end with an alphanumeric character. Can contain lowercase letters, numbers, and hyphens. Multiple segments can be joined with dots. Each segment follows the same rules.
      minLength: 1
      maxLength: 128
      pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
      example: "primary-load-balancer"
    generation:
      type: integer
      description: Monotonically increasing generation number, incremented on each update. Starts at 1.
      readOnly: true
      minimum: 1
    deletionTimestamp:
      type: string
      format: date-time
      description: If set, indicates the time when the resource was marked for deletion. Resources with this field set are considered pending deletion.
      readOnly: true
    labels:
      type: object
      description: User-defined key/value pairs that are mutable and can be used to organize and categorize resources.
      additionalProperties: true
      example:
        language: en
        billing.cost-center: platform-eng
        env: production

GlobalResourceMetadata:
  allOf:
    - $ref: '#/ResourceMetadata'
  description: Metadata for global resources with no location constraints

RegionalResourceMetadata:
  allOf:
    - $ref: '#/ResourceMetadata'
  description: Metadata for regional resources
  properties:
    region:
      type: object
      description: Reference to the region where the resource is located
      properties:
        name:
          type: string
      required:
        - name

ZonalResourceMetadata:
  allOf:
    - $ref: '#/ResourceMetadata'
  description: Metadata for zonal resources
  properties:
    location:
      type: object
      description: Reference to the specific location (region/zone) where the resource is located
      properties:
        name:
          type: string
      required:
        - name

Location:
  type: object
  description: Represents a specific geographic location combining region and zone
  properties:
    metadata:
      $ref: '#/ResourceMetadata'
    name:
      type: string
      description: Composite name in the format 'region/zone'
    region:
      type: string
    zone:
      type: string
      description: Optional zone within the region

# Rest of the existing schema remains the same (Label, StatusConditions, Profile, Setting, Constraint, Connector, etc.)

Label:
  type: object
  description: Represents a key/value pair used for labels, providing a consistent structure for metadata tagging
  properties:
    key:
      type: string
      description: The identifier for the label. Keys can be optionally namespaced using either a colon or dot notation (e.g., 'monitoring:alert-level' or 'monitoring.alert-level'). The namespace portion follows the same naming rules as the key.
      minLength: 1
      maxLength: 256
      pattern: '^([a-z0-9A-Z][-a-z0-9A-Z_.]*)?[a-z0-9A-Z]$'
    value:
      type: string
      description: The data content of the label.
      maxLength: 256
  required:
    - key
    - value

StatusConditions:
  type: array
  description: |
    Conditions represent the latest available observations of a resource's current state.
    Conditions are provider-specific and can represent different states depending on the
    resource type and provider implementation.
  items:
    type: object
    required:
      - type
      - status
      - lastTransitionTime
    properties:
      type:
        type: string
        description: |
          Type of condition. The condition type is provider-specific and should
          reflect the specific states relevant to your resource.
        example: "Ready"
      status:
        type: string
        description: Status of the condition, one of True, False, Unknown.
        enum:
          - "True"
          - "False"
          - "Unknown"
      lastTransitionTime:
        type: string
        format: date-time
        description: |
          LastTransitionTime is the last time the condition transitioned from one
          status to another. This should be when the underlying condition changed.
          If that is not known, then using the time when the API field changed is
          acceptable.
      reason:
        type: string
        description: |
          The reason for the condition's last transition in CamelCase.
          The specific set of reason values is provider-specific and should be
          documented by the provider.
        maxLength: 1024
        pattern: '^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$'
      message:
        type: string
        description: |
          A human-readable message indicating details about the transition.
          This field may be empty.
        maxLength: 32768

Profile:
  type: object
  properties:
    name:
      type: string
    labels:
      type: array
      items:
        $ref: '#/Label'
    privateSettings:
      type: array
      items:
        $ref: '#/Setting'
    protectedSettings:
      type: array
      items:
        $ref: '#/Setting'
    publicSettings:
      type: array
      items:
        $ref: '#/Setting'
    parentRef:
      type: object
      properties:
        type:
          type: string
          enum: [ "Profile" ]
        name:
          type: string

Setting:
  type: object
  properties:
    name:
      type: string
    value:
      type: string
    constraints:
      type: array
      items:
        $ref: '#/Constraint'

Constraint:
  type: object
  properties:
    type:
      type: string
      enum: ['MIN', 'MAX', 'LIST', 'REGEX', 'RANGE', 'LENGTH', 'ENUM', 'CHARSET', 'DATE_FORMAT', 'EMAIL', 'URL', 'PRECISION', 'MULTIPLE_OF']
    value:
      oneOf:
        - type: string  # For MIN, MAX, REGEX, LIST, ENUM, CHARSET, DATE_FORMAT, EMAIL, URL
        - type: array   # For LIST, ENUM
          items:
            type: string
        - type: object  # For RANGE, LENGTH, PRECISION
          properties:
            min:
              type: number
            max:
              type: number
        - type: number  # For MULTIPLE_OF
  required:
    - type
    - value

Connector:
  type: object
  properties:
    id:
      type: string
    name:
      type: string
    sourceResource:
      $ref: '#/ResourceMetadata'
    targetResource:
      $ref: '#/ResourceMetadata'


Region:
  type: object
  properties:
    name:
      type: string
    availableZones:
      type: array
      items:
        type: string
