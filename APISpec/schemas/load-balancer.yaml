NetworkLoadBalancer:
  type: object
  properties:
    apiVersion:
      type: string
      description: API version of the resource
      default: v1beta1
      readOnly: true
    kind:
      type: string
      description: Type of the resource
      enum: [ network-load-balancer ]
      readOnly: true
    metadata:
      $ref: './resource.yaml#/RegionalResourceMetadata'
    spec:
      type: object
      properties:
        profile:
          type: object
          properties:
            networkLoadBalancerSkuRef:
              type: string
              description: Reference to the SKU used for this network-load-balancer
        ipConfigurations:
          type: array
          items:
            $ref: '#/NetworkLoadBalancerFrontend'

    status:
      allOf:
      - $ref: "./resource.yaml#/Status"
      - type: object
        properties:
          state:
            $ref: './resource.yaml#/ResourceState'
          ipConfigurations:
            type: array
            items:
              $ref: '#/NetworkLoadBalancerFrontend'
          ipConfigurationsHealthy:
            type: array
            items:
              $ref: '#/NetworkLoadBalancerFrontend'


NetworkLoadBalancerFrontend:
  type: object
  properties:
    protocol:
      type: string
      description: 'Frontend Protocol to which the load balancer will be listening on'
      enum: [ TCP, UDP ]
    port:
      type: integer
      format: int32
      description: A valid network port number.
      minimum: 0
      maximum: 65535
    nicRef:
      description: NIC reference to the LoadBalancer. If ipAddressType will be ipv4 or dual-stack or if the LoadBalancer will be internal or external depends on the associated NIC
      type: string
    target:
      $ref: '#/LoadBalancerTarget'


LoadBalancerTarget:
  type: object
  properties:
    algorithm:
      type: string
      description: 'LoadBalancer algorithm to take a backend istance'
      enum: [ ROUND_ROBIN ]
    protocol:
      type: string
      description: 'Frontend Protocol to which the load balancer will be listening on'
      enum: [ TCP, UDP ]
    port:
      type: integer
      format: int32
      description: A valid network port number.
      minimum: 0
      maximum: 65535
    members:
      type: array
      items:
        $ref: '#/LoadBalancerMember'       
    healthcheck:
      type: object
      description: Optional port health check. It probes the port with protocol.
      properties:
        interval:
         type: integer
         description: 'healthcheck interval in seconds. It means after how many seconds it will take a new check'
        timeout:
         type: integer
         description: 'healthcheck in seconds. It means after how many seconds the attempt will be considered unhealthy'
        retry:
         type: integer
         description: 'healthcheck retry number after considered unhealthy a backend istance'
    
     
LoadBalancerMember:
  type: object
  properties:
    nicRef:
      type: string
      description: 'Nic Reference to the LoadBalancerMember as part of the LoadBalancerTarget'