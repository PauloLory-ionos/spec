openapi: 3.0.3
servers:
  - url: https://secapi.cloud
    description: API Definition Environment
info:
  title: Sovereign European Cloud API
  version: v1beta0d
  license:
    name: "Proprietary - All Rights Reserved"
  description: |
    API for managing cloud resources

    A foundational API for managing cloud infrastructure components, 
    providing control over compute, storage, network resources, and access management in a sovereign European cloud environment. 
    The API focuses on essential IaaS services. Implements security through integrated RBAC.
    
    Current state: 
    Basic api to drive lowest level of service: compute resources, block disks and network.

    ![API Diagram](https://x.frei-services.net/api-diagram.png)
security:
  - bearerAuth: []
tags:
  - name: Network
    description: Network resources including VPCs, NICs, security groups, subnets, and routing tables
  - name: Compute
    description: Compute resources including virtual machines and instance management
  - name: Storage
    description: Storage resources including block storage volumes and snapshots
  - name: Authorization
    description: Authorization resources including RBAC roles and role assignments
  - name: Organization
    description: Organization-wide resources including workspaces, images, regions, and general resources
  - name: Catalogues
    description: Resource catalogues including server and volume profiles
paths:
  # Workspaces
  /v1beta1/tenants/{id}/workspaces/{name}:
    $ref: './paths/workspaces.yaml#/~1workspaces~1{name}'

  # Tenants SKUs Resource
  /v1beta1/tenants/{id}/providers/seca.compute/skus:
    $ref: './paths/skus.yaml#/~1skus'
  /v1beta1/tenants/{id}/providers/seca.compute/skus/{name}:
    $ref: './paths/skus.yaml#/~1skus~1{name}'

  # Platform resources (regions and images)
  /v1beta1/providers/seca.platform/regions:
    $ref: './paths/regions.yaml#/~1regions'
  /v1beta1/providers/seca.platform/images:
    $ref: './paths/images.yaml#/~1images'
  /v1beta1/providers/seca.platform/images/{name}:
    $ref: './paths/images.yaml#/~1images~1{name}'

  # Network resources - VPC and its resources
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.network/vpcs:
    $ref: './paths/vpc.yaml#/~1workspaces~1{workspace}~1providers~1network~1vpcs'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.network/vpcs/{vpc}:
    $ref: './paths/vpc.yaml#/~1workspaces~1{workspace}~1providers~1network~1vpcs~1{vpc}'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.network/vpcs/{vpc}/subnets:
    $ref: './paths/subnets.yaml#/~1workspaces~1{workspace}~1providers~1network~1vpcs~1{vpc}~1subnets'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.network/vpcs/{vpc}/subnets/{name}:
    $ref: './paths/subnets.yaml#/~1workspaces~1{workspace}~1providers~1network~1vpcs~1{vpc}~1subnets~1{name}'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.network/vpcs/{vpc}/security-groups:
    $ref: './paths/security-groups.yaml#/~1workspaces~1{workspace}~1providers~1network~1vpcs~1{vpc}~1security-groups'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.network/vpcs/{vpc}/security-groups/{name}:
    $ref: './paths/security-groups.yaml#/~1workspaces~1{workspace}~1providers~1network~1vpcs~1{vpc}~1security-groups~1{name}'

  # Authorization resources - RBAC
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.authorization/roles:
    $ref: './paths/rbac.yaml#/~1workspaces~1{workspace}~1providers~1authorization~1roles'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.authorization/roles/{name}:
    $ref: './paths/rbac.yaml#/~1workspaces~1{workspace}~1providers~1authorization~1roles~1{name}'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.authorization/role-assignments:
    $ref: './paths/rbac.yaml#/~1workspaces~1{workspace}~1providers~1authorization~1role-assignments'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.authorization/role-assignments/{name}:
    $ref: './paths/rbac.yaml#/~1workspaces~1{workspace}~1providers~1authorization~1role-assignments~1{name}'
  
  # Workspace resources with provider namespace
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.compute/instances:
    $ref: './paths/instances.yaml#/~1workspaces~1{workspace}~1providers~1compute~1instances'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.compute/instances/{name}:
    $ref: './paths/instances.yaml#/~1workspaces~1{workspace}~1providers~1compute~1instances~1{name}'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.storage/block-storages:
    $ref: './paths/block-storage.yaml#/~1workspaces~1{workspace}~1providers~1storage~1block-storages'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.storage/block-storages/{name}:
    $ref: './paths/block-storage.yaml#/~1workspaces~1{workspace}~1providers~1storage~1block-storages~1{name}'
  
  # Block storage snapshots
  # /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.storage/block-storages/{name}/snapshots:
  #   $ref: './paths/block-storage.yaml#/~1workspaces~1{workspace}~1providers~1storage~1block-storages~1{name}~1snapshots'
  # /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.storage/block-storages/{name}/snapshots/{snapshotName}:
  #   $ref: './paths/block-storage.yaml#/~1workspaces~1{workspace}~1providers~1storage~1block-storages~1{name}~1snapshots~1{snapshotName}'

  # New PublicIp Resource
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.network/public-ips:
    $ref: './paths/public-ips.yaml#/~1workspaces~1{workspace}~1providers~1network~1public-ips'
  /v1beta1/tenants/{id}/workspaces/{workspace}/providers/seca.network/public-ips/{name}:
    $ref: './paths/public-ips.yaml#/~1workspaces~1{workspace}~1providers~1network~1public-ips~1{name}'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
  schemas:
    VPC:
      $ref: './schemas/vpc.yaml#/VPC'
    Subnet:
      $ref: './schemas/subnet.yaml#/Subnet'
    NIC:
      $ref: './schemas/nic.yaml#/NIC'
    PublicIp:
      $ref: './schemas/public-ip.yaml#/PublicIp'
    SecurityGroup:
      $ref: './schemas/security-group.yaml#/SecurityGroup'
    Instance:
      $ref: './schemas/instance.yaml#/Instance'
    BlockStorage:
      $ref: './schemas/block-storage.yaml#/BlockStorage'
    BlockStorageSnapshot:
      $ref: './schemas/block-storage.yaml#/BlockStorageSnapshot'
    Image:
      $ref: './schemas/image.yaml#/Image'
    SystemRole:
      $ref: './schemas/rbac.yaml#/SystemRole'
    Role:
      $ref: './schemas/rbac.yaml#/Role'
    RoleAssignment:
      $ref: './schemas/rbac.yaml#/RoleAssignment'
    Error:
      $ref: './schemas/error_schemas.yaml#/Error'
    ErrorDetail:
      $ref: './schemas/error_schemas.yaml#/ErrorDetail'
    Error400:
      $ref: './schemas/error_schemas.yaml#/Error400'
    Error401:
      $ref: './schemas/error_schemas.yaml#/Error401'
    Error403:
      $ref: './schemas/error_schemas.yaml#/Error403'
    Error404:
      $ref: './schemas/error_schemas.yaml#/Error404'
    Error412:
      $ref: './schemas/error_schemas.yaml#/Error412'
    Error422:
      $ref: './schemas/error_schemas.yaml#/Error422'
    Error500:
      $ref: './schemas/error_schemas.yaml#/Error500'
    Sku:
      $ref: './schemas/sku.yaml#/Sku'
  responses:
    Error400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400'
    Error401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error401'
    Error403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error403'
    Error404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error404'
    Error412:
      description: Precondition Failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error412'
    Error422:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error422'
    Error500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error500'
