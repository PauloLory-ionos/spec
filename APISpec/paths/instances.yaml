/workspaces/{workspace}/providers/compute/instances:
  get:
    tags:
      - Compute
    summary: List all instances
    operationId: listInstances
    x-authorization:
      type: hybrid  # Supports both RBAC and ABAC
      policies:
        - type: RBAC
          scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
          resources: ["seca.compute/instances"]
          verbs: ["list"]
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Tenant ID
      - name: workspace
        in: path
        required: true
        schema:
          type: string
      - $ref: '../schemas/parameters.yaml#/parameters/labelSelector'
      - $ref: '../schemas/parameters.yaml#/parameters/limitParam'
      - $ref: '../schemas/parameters.yaml#/parameters/skipTokenParam'
      - $ref: '../schemas/parameters.yaml#/parameters/acceptHeader'
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    $ref: '../schemas/instance.yaml#/Instance'
                metadata:
                  type: object
                  properties:
                    skipToken:
                      type: string
                      description: Opaque cursor to get the next page. Field is omitted when there are no more pages available.
      '400':
        $ref: '../openapi.yaml#/components/responses/Error400'
      '401':
        $ref: '../openapi.yaml#/components/responses/Error401'
      '403':
        $ref: '../openapi.yaml#/components/responses/Error403'
      '404':
        $ref: '../openapi.yaml#/components/responses/Error404'
      '500':
        $ref: '../openapi.yaml#/components/responses/Error500'

/workspaces/{workspace}/providers/compute/instances/{name}:
  get:
    tags:
      - Compute
    summary: Get a specific instance
    operationId: getInstance
    x-authorization:
      type: hybrid  # Supports both RBAC and ABAC
      policies:
        - type: RBAC
          scopes: ["tenants/{tenantId}/workspaces/{workspaceName}"]
          resources: ["seca.compute/instances/{instanceName}"]
          verbs: ["get"]
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Tenant ID
      - name: workspace
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Successful response
        content:
          application/json:
            schema:
              $ref: '../schemas/instance.yaml#/Instance'
      '400':
        $ref: '../openapi.yaml#/components/responses/Error400'
      '401':
        $ref: '../openapi.yaml#/components/responses/Error401'
      '403':
        $ref: '../openapi.yaml#/components/responses/Error403'
      '404':
        $ref: '../openapi.yaml#/components/responses/Error404'
      '500':
        $ref: '../openapi.yaml#/components/responses/Error500'
  put:
    tags:
      - Compute
    summary: Create or update a specific instance
    operationId: createOrUpdateInstance
    x-rbac:
      permissions: compute/instance:write
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Tenant ID
      - name: workspace
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
      - $ref: '../schemas/parameters.yaml#/parameters/ifUnmodifiedSince'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/instance.yaml#/Instance'
    responses:
      '202':
        description: Instance updated or created
      '400':
        $ref: '../openapi.yaml#/components/responses/Error400'
      '401':
        $ref: '../openapi.yaml#/components/responses/Error401'
      '403':
        $ref: '../openapi.yaml#/components/responses/Error403'
      '404':
        $ref: '../openapi.yaml#/components/responses/Error404'
      '412':
        $ref: '../openapi.yaml#/components/responses/Error412'
      '422':
        $ref: '../openapi.yaml#/components/responses/Error422'
      '500':
        $ref: '../openapi.yaml#/components/responses/Error500'
  delete:
    tags:
      - Compute
    summary: Delete a specific instance
    operationId: deleteInstance
    x-rbac:
      permissions: compute/instance:write
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Tenant ID
      - name: workspace
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Instance deleted
      '400':
        $ref: '../openapi.yaml#/components/responses/Error400'
      '401':
        $ref: '../openapi.yaml#/components/responses/Error401'
      '403':
        $ref: '../openapi.yaml#/components/responses/Error403'
      '404':
        $ref: '../openapi.yaml#/components/responses/Error404'
      '500':
        $ref: '../openapi.yaml#/components/responses/Error500'
